name: One App Docker Release
on:
  push:
    tags:
      - '*'
  repository_dispatch:
    types: [one-app-docker-release]
jobs:
  one-app-docker-release:
    name: Build and Deploy to Docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Set env
        id: set_tag_version
        run: |
          if [ "${{ github.event.client_payload.tagversion }}" != "" ]; then
          echo ::set-output name=tagversion::${{ github.event.client_payload.tagversion }}
          else
          echo ::set-output name=tagversion::$(echo $GITHUB_REF | cut -d / -f 3)
          fi
          echo $tagversion
      - name: Docker login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username ${{ secrets.DOCKER_USER }} --password-stdin
      - name: Build production docker image
        run: docker build -t prod .
      - name: Extract production statics
        run: |
          docker cp $(docker create prod):opt/one-app/build ./one-app-statics
          docker cp $(docker create prod):opt/one-app/one-app-statics/package.json ./one-app-statics
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          zip --junk-paths one-app-assets one-app-statics/build
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./one-app-assets.zip
          asset_name: one-app-assets.zip
          asset_content_type: application/zip

